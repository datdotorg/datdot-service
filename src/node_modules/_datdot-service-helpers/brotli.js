const zlib = require('zlib')

const brotli = {
  compress: (data) => new Promise((resolve, reject) => {
    try {
      // TODO: refine options
      const deflater = new zlib.BrotliCompress({
        params: {
          [zlib.constants.BROTLI_PARAM_QUALITY]: zlib.constants.BROTLI_MAX_QUALITY
        }
      })
      deflater.end(data)
      deflater.on('data', encoded => {
        resolve(encoded)
      })
    } catch(err) {
      reject('error compressing data')
      throw new Error('error compressing data')
    }
  }),
  
  decompress: (encoded) => new Promise((resolve, reject) => {
    try {     
      // TODO: refine options
      const inflater = new zlib.BrotliDecompress()
      inflater.end(encoded)
      inflater.on('data', decoded => {
        resolve(decoded)
      })
    } catch(err) {
      reject('error decompressing data')
      throw new Error('error decompressing data')
    }
  })
}

module.exports = brotli
