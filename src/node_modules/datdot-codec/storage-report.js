const varint = require('varint')

module.exports = { decode, encode }

// @NOTE: X === encode(decode(X))

function decode (data) {
  try {
    var reports = data.args[0].reports
    reports.forEach(report => {
      report.storage_challenge_signature = Buffer.from(report.storage_challenge_signature, 'binary')
      report.nodes.forEach(node => {
        node.hash = Buffer.from(node.hash, 'hex')
      })
    })
    if (!validate(data)) throw new Error('invalid data')
    return data
  } catch (error) {
    console.log({error})
    throw new Error('invalid data')
  }
}

function encode (data) {
  if (!validate(data)) throw new Error('invalid data')
  // @TODO: turn message into a buffer
  const chunk = Buffer.from({}, 'hex')
  return chunk
}

function validate (data) {
  try {
    // @TODO: verify data contains all keys and values and everything necessary for a `storage-report`
    return true
  } catch (error) {
    console.log({error})
    return false
  }

}