const hypercore = require('hypercore')
const ready = require('hypercore-ready')
const RAM = require('random-access-memory')

module.exports = verify_chunk

async function verify_chunk (feedKey, data, index, nodes, signature, name) {
  data =  Buffer.from(data, 'utf-8')
  signature = Buffer.from(signature)
  feedKey = Buffer.from(feedKey, 'hex')
  const foo = JSON.parse(JSON.stringify(nodes))

  const feed = new hypercore(RAM, feedKey, { valueEncoding: 'utf-8', sparse: true })
  
  feed._open(async () => {
    const packet = {
      index,
      value: data,
      nodes,
      signature
    }
    
    // This should throw if the data is invalid
    await new Promise((resolve, reject) => {
      console.log('starting to verify')
      feed._putBuffer(index, data, packet, {}, (err) => {
        if (index === 1) { console.log(`[${name}]`, {feedKey, data, index, nodes: foo, signature}) }
        if (err) {
          // console.log({err})
          reject(err)
        }
        else {
          console.log('chunk verified')
          resolve()
        }
      })
    })
  })

}