const hypercore = require('hypercore')
const ready = require('hypercore-ready')
const RAM = require('random-access-memory')

module.exports = verify_chunk

function verify_chunk (feedKey, decoded, index, nodes, signature, info2) {
  // console.log('verifying now', {index, nodes: nodes.map(x => x.index)})
  return new Promise(async (resolve, reject) => {
    const feed = new hypercore(RAM, feedKey, { valueEncoding: 'utf-8', sparse: true })
    await ready(feed)
    const data = Buffer.from(decoded, 'hex')
    feed._putBuffer(
      index,
      data,
      packet = { index, value: data, nodes, signature },
      from = {},
      (err) => {
        if (err) {
          const info = { index, version: nodes[nodes.length - 1].index, nodes: nodes.map(x => x.index) }
          info2.all_nodes = info2.all_nodes.map(x=>x.index)
          console.log('GIVEN', info2)
          console.log('ERROR', info, err)
          reject(err)
        }
        else {
          console.log('SUCCESS')
          resolve()
        }
      }
    )
  })
}