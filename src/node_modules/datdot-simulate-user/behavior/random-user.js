const hyperswarm = require('hyperswarm')
const hypercore = require('hypercore')
const RAM = require('random-access-memory')
const b4a = require('b4a')
const fs = require('fs').promises


start()

async function start () {
  const stringkey = 'efdf29ad9ae28f90cabd71e5ac9a01644d330479a914fe2c15f83a3ed7428da1'
  var feedkey = b4a.from(stringkey, 'hex')
  const bootstrap_path = `bootstrap.json`
  const string = await fs.readFile(bootstrap_path)
  const bootstrap = JSON.parse(string)
  const opts = { bootstrap }
  const mode = { server: false, client: true}
  const swarm = new hyperswarm(opts)
  const feed = new hypercore(RAM, feedkey, { valueEncoding: 'binary', sparse: true })
  await feed.ready()
  var topic = feed.discoveryKey
  swarm.join(topic, mode)
  
  swarm.on('connection', async (connection, info) => {
    console.log('new connection')
    const replicationStream = hypercore.createProtocolStream(connection)
    feed.replicate(replicationStream)
    const data = await feed.get(1)
    console.log('got data', data.toString('binary'))
  })
}